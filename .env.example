# NODE_ENV=development
# LOG_LEVEL=debug
# LOG_FILE=/tmp/correctomatic.log

# Environment variables for redis, needed by bullMQ
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD="<redis password>"

# Docker configuration. See Dockerode documentation for more information
# If not set, the default is to use the local docker daemon.
# Be careful with quotes and extra commas. The value must be a valid JSON string.
#
# For certificates, use the path to the file. The following fields will be taken as
# paths to the files:
# - ca
# - cert
# - key
# - sshOptions.privateKey
#
# Https example:
# DOCKER_OPTIONS='{
#   "host": "my.correctomatic.server",
#   "protocol": "https",
#   "port": 2376,
#   "ca": "/path/to/ca.pem",
#   "cert": "/path/to/cert.pem",
#   "key": "/path/to/key.pem"
# }'
#
#
# Ssh example (not tested):
# DOCKER_OPTIONS='{
#     "protocol": "ssh",
#     "host": "my.correctomatic.server",
#     "port": 22,
#     "username": "dockeruser",
#     "sshOptions": {
#         "privateKey": "/path/to/private/key"
#     }
# }'
# Docker options file. If DOCKER_OPTIONS is not empty, this will be ignored.
# The file is a JSON with the same format as DOCKER_OPTIONS.
DOCKER_OPTIONS_FILE="/path/to/docker-options.json"

# Timeout for Docker operations in milliseconds
DOCKER_TIMEOUT=10000
# Automatically pull images before starting containers. Used only by the starter process
DOCKER_PULL=true
# Timeout for Docker pull operations in milliseconds. Used only by the starter process.
DOCKER_PULL_TIMEOUT=15000
# Repository credentials. Used only by the starter process
DOCKER_REPOSITORY_CREDENTIALS='{
  "the.registry.domain": {
    "username": "theusername",
    "password": "thepass"
  }
}'
# Path to the file with the repository credentials. Used only by the starter process
# Is mixed with DOCKER_REPOSITORY_CREDENTIALS if both are set
DOCKER_REPOSITORY_CREDENTIALS_FILE="/path/to/credentials.json"

# Temporary environment variable to prevent starting the container, for debugging the completer
DONT_START_CONTAINER=true

# Number of concurrent jobs sending notifications of completed tasks
CONCURRENT_NOTIFIERS=20
